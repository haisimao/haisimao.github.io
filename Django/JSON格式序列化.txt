查看一个函数的所有参数与定义: help(function)
https://blog.csdn.net/sinat_41701878/article/details/79326664
****************************************************
JSON格式序列化与反序列化:
    python 数据类型除了类,其他类型都有对应的JSON序列化后对应的格式,所以不能直接对python中的类进行序列化.(注)函数是不能序列化的

    当使用json.dumps与json.loads两个函数进行数据的序列化与反序列化时,dumps有一个参数default可以指定默认的序列化编码器函数.loads有一个参数object_hook可以指定默认的反序列化编码器函数.

关于JSON序列化对象:
    编写序列化函数: python的对象都有一个默认的方法可以将类的属性字典化object.__dict__(将与实例相关的属性以dict的形式返回).用这种方式可以将类相关的属性进行序列化.因为函数不能序列化,所以序列化后的JSON数据只有对象相关的属性.
    编写反序列化函数: 反序列化时,定义反序列化函数的主要工作是,用前面序列化的类实例属性重新创建一个类,达到对对象反序列化的效果.

    所以一个指定的序列化函数与反序列化函数,只能唯一作用一个类

    注意进行了序列化后的数据,虽然在python中类型显示为<str>,但它确是JSON格式的数据,不是python中的<str>,是进行了序列化的数据

    

















