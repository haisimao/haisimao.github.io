

Custon -> 选择安装那些东西 5.7  ->  缺失什么东西,点下面的执行Excute ->

cmd -> services.msc(windows的服务管理器 -> 找到MySQL57启动服务

或者在cmd里以管理员权限运行 -> net stop/start mysql57 启停mysql57

卸载时用mysql自己自带的卸载程序

MySQL 数据库 --是一个数据库服务器

navicat 端口:3306,密码123456

SQL命令:查询 ->新建查询 -> 写SQL语言

为什么要使用数据库 -> 1.数据持久化:将数据从掉电数据就丢失的存储设备(内存)                       转移到持久存储介质(硬盘等)

                     2.数据库 -- 高效的存储和管理数据,方便的检索数据

为什么要使用关系型数据库 -> 理论基础:集合论和关系代数,
用二维表组织数据 - 表:实体
                 - 行:记录
                 -  列:字段
表与表之间有关系
关系型数据库有自己编程语言 - SQL - 结构化查询语言 -- 关系型数据库通用

数据库 - DB - 数据的仓库(集散地),
数据库系统 - NBS - 包括了DB,DBMS,DBA(数据库管路员),
数据库管理系统 - (R)DBMS - (关系型)数据库管理系统 - 管理数据库的软件

关系型数据库 : MySQL - Oracle - DB2 - SQL Server - SQLite(嵌入式数据库-移动端)

使用数据库 - 数据库服务器+客户端工具(SQLyog,Toad for MySQL,Navicat for MySQL)

设计数据库先画E-R图  ----表与表之间的关系一对一,一对多,多对多

在mysql : ? 命令  --查询使用方法

show creat tb_table 

desc tb_student  --


select 查询列(必填/*) from 表名 [删选条件] [分组条件] [聚合函数] [分组以后的筛选] [排序条件] [分页查询]

这也是执行顺序

连表条件很重要,可灵活运用

SQL and /or 语句中 执行从右边开始

要用到聚合函数的地方就会用到group by 

你的问题在于想的太多,做的太少

重建项目,粘贴

CSDN,官方文档,解决难的问题,先写自然语言过程,再编代码

-- 关系型数据库中数据完整性指的是什么
-- 1. 实体完整性: 每条记录都是独一无二的(主键/唯一约束/唯一索引)
-- 2. 参照完整性: 表中的数据要参照其他表已有的数据(外键)
-- 3. 域完整性: 数据是有效的(数据类型/非空约束/默认值约束/检查约束)

索引相当于一个目录,他可以加速查询提升查询效率
索引是典型的以空间换区时间的技术
索引会加速查询但是会让增删改变得更慢,一位增删改数据时索引也要更新

通过视图可以将用户对标的查询权限限制在某些列上,也就是说不同的用户可以看到原始表中不同的数据
create or replace view 视图名 as
select 语句

*************************优化数据库时很重要
函数和过程: 函数可以产生返回值,而过程没有
函数和过程都是在存储在数据库服务器端编译好的二进制程序
所以直接调用函数和过程其执行效率比直接向数据库发SQL语句效率高


事务: 原子性操作(不可分割的操作)
      要么全做,要么全部做
      begin;开启事务环境
      sql 语句
      commit;提交操作
      rollback;放弃操作

事务的特点: ACID特性
原子性: 不可分割
一致性: 事务前后数据状态要保持一致
隔离性: 多个事务不能看到彼此的中间状态(提交或回滚之前的状态)
持久性: 事务完成后数据要持久化(事务的影响要反应在物理存储上)

redisdoc.com

























